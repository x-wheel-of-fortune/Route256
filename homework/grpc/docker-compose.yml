version: "3.7"
services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: test
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      PGPORT: 5431
    ports:
      - "5431:5431"

  app:
    build: .
    ports:
      - 9091:9091 # Prometheus exporter
      - 9093:9093 # GRPC

  grafana:
    image: grafana/grafana:8.0.3
    depends_on:
      - prometheus
    ports:
      - 3000:3000

  prometheus:
    image: prom/prometheus:v2.28.0
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    depends_on:
      - node-exporter

  node-exporter:
    image: prom/node-exporter:v1.1.2
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --collector.filesystem.ignored-mount-points
      - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
    ports:
      - 9100:9100

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp"
      - "16686:16686"
    networks:
      - jaeger-example

networks:
  jaeger-example: